// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// stem::string, attestation::string, qualification::string, RTG_preference::float?, CT_preference::float?
model User {
  id              Int               @id @default(autoincrement())
  name            String?
  occupation      String
  stem            String?
  attestation     String?
  qualification   String?
  rtg_preference  Float?
  ct_preference   Float?
  UserSchedule    UserSchedule[]
  UserScheduleDay UserScheduleDay[]
}

model UserSchedule {
  id              Int               @id @default(autoincrement())
  userId          Int
  user            User              @relation(fields: [userId], references: [id])
  schedule        DateTime
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  UserScheduleDay UserScheduleDay[]
}

model UserScheduleDay {
  id             Int          @id @default(autoincrement())
  userScheduleId Int
  userSchedule   UserSchedule @relation(fields: [userScheduleId], references: [id])
  userId         Int
  user           User         @relation(fields: [userId], references: [id])
  day            DateTime
  dayPart        Int
  preference     Int
  reasonCode     Int
  reasonText     String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Shift {
  id            Int         @id @default(autoincrement())
  type          String
  employeeType  String
  department    String
  amount        Int
  qualification String
  ShiftSlot     ShiftSlot[]
}

model ShiftSlot {
  id      Int      @id @default(autoincrement())
  date    DateTime
  shift   Shift    @relation(fields: [shiftId], references: [id])
  shiftId Int
}

// model ShiftPlacement {
//
// }
